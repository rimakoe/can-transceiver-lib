cmake_minimum_required(VERSION 3.8)
project(can-transciever-lib)

set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

set(AUTOGENERATED_FILE_NAME can1)
set(AUTOGENERATED_FILE_NAME_TRANSCIEVER transciever)
set(CAN_DBC_FILE_NAME CAN1MainFT24.dbc)

execute_process(
  COMMAND python3 "-m" "cantools" "generate_c_source" "--prune" "${CMAKE_CURRENT_SOURCE_DIR}/dbc/${CAN_DBC_FILE_NAME}" "--database-name" "${AUTOGENERATED_FILE_NAME}"
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src"
  )

execute_process(
    COMMAND mv ${CMAKE_CURRENT_SOURCE_DIR}/src/${AUTOGENERATED_FILE_NAME}.h ${CMAKE_CURRENT_SOURCE_DIR}/include/${PROJECT_NAME}/${AUTOGENERATED_FILE_NAME}.h    
    COMMAND mv ${CMAKE_CURRENT_SOURCE_DIR}/src/${AUTOGENERATED_FILE_NAME}.c ${CMAKE_CURRENT_SOURCE_DIR}/src/${AUTOGENERATED_FILE_NAME}.cpp
    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src"
)

execute_process(
  COMMAND python3 "-m" "cantools" 
  "generate_c_source_transciever" "${CMAKE_CURRENT_SOURCE_DIR}/dbc/${CAN_DBC_FILE_NAME}"
  "--prune"
  "--database-name" "${AUTOGENERATED_FILE_NAME}"
  "--output-headers" "include/can-transciever-lib"
  "--output-sources" "src"
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  )

include_directories(include/${PROJECT_NAME})
include_directories(include)

add_library(${PROJECT_NAME} SHARED src/${AUTOGENERATED_FILE_NAME}.cpp src/${AUTOGENERATED_FILE_NAME_TRANSCIEVER}.cpp)

install(
  DIRECTORY include/${PROJECT_NAME}
  DESTINATION include
)

install(TARGETS
    ${PROJECT_NAME}
    EXPORT ${PROJECT_NAME}
    ARCHIVE DESTINATION ${PROJECT_NAME}
    LIBRARY DESTINATION ${PROJECT_NAME}
    RUNTIME DESTINATION ${PROJECT_NAME}
)

install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}-config DESTINATION lib/${PROJECT_NAME})

install(EXPORT ${PROJECT_NAME} DESTINATION lib/${PROJECT_NAME})

# install(FILES can_lib-config.cmake DESTINATION lib/${PROJECT_NAME}/cmake)
